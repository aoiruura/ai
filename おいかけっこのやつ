#include <bits/stdc++.h>
#define rep(i,n) for(int i=0;i<(n);++i)
#define rrep(i,n) for(int i=1;i<(n);++i)
#define all(a) (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()
#define dunk(a) cout << (a) << "\n"
using namespace std;
typedef long long ll;
typedef pair<int, int> P;
const int inf = 1001001001;
const int mod = 1000000007;

vector<int> to[100005];
int n;

vector<int> dist;
void dfs(int v, int d = 0, int p = -1) {
	dist[v] = d;
	for (auto& c : to[v]) {
		if (c == p) continue;
		dfs(c, d + 1, v);
	}
	return;
}

vector<int> calcDist(int s) {
	dist = vector<int>(n);
	dfs(s);
	return dist;
}

int main() {
	cin >> n;
	int s, t;
	cin >> s >> t;
	s--; t--;
	rep(i, n - 1) {
		int a, b; cin >> a >> b;
		a--; b--;
		to[a].emplace_back(b);
		to[b].emplace_back(a);
	}

	vector<int> distS = calcDist(s);
	vector<int> distT = calcDist(t);

	int mx = 0;
	rep(i, n) {
		if (distS[i] < distT[i]) {
			mx = max(mx, distT[i]);
		}
	}
	int ans = mx - 1;
	dunk(ans);
	return 0;
 }
//vectorの特殊な作り方やdfsが意外と単純だということを教えてくれる
